export declare const MESSAGES: {
    rateLimitExceeded: string;
    recordInUse: (record: any) => string;
    recordCountDelete: (count: number, max: number) => string;
    recordExists: string;
    errorOccurred: string;
    recordAdded: string;
    schoolApplicationSubmitted: string;
    recordUpdated: string;
    recordFound: string;
    recordNotFound: string;
    invalidNin: string;
    ninNameMismatch: string;
    pendingApproval: string;
    updateSuccessful: string;
    unlinkedSuccessful: string;
    imageNotFound: string;
    docTitle: string;
    docDescription: string;
    printSuccessful: string;
    printFailed: string;
    approvedSuccessful: string;
    rejectSuccessful: string;
    approvedFailed: string;
    logout: string;
    passwordStrengthFailed: string;
    oldNewPasswordMatch: string;
    passwordMismatch: string;
    welcome: string;
    otpSent: string;
    otpValid: string;
    accountCreatedSubject: string;
    preRegistrationEmailSubject: string;
    otpEmailSubject: string;
    ninVerificationFailed: string;
    newApplicationAssigned: string;
    applicationApproved: string;
    licenseApproved: string;
    lasdriOfficerAssigned: string;
    applicationPaymentConfirmed: string;
    applicationQueried: string;
    inspectionRequested: string;
    inspectionQueried: string;
    inspectionApproved: string;
    questionsUploaded: string;
    invalidValue: (token: string) => string;
    otpEmailBody: (otpCode: string) => string;
    userAccountCreated: (password: string, email: string) => string;
    drivingSchoolApplicationCreated: (name: string, email: string, password: string) => string;
    preRegistrationEmailBody: (applicationNo: string, name: string) => string;
    licenseEmailBody: (applicationNo: string, licenseNo: string, name: string) => string;
    mailDisclaimer: string;
    newApplicationAssignedEmailBody: (name: string, identifier: string) => string;
    applicationApprovedEmailBody: () => string;
    applicationPaymentConfirmedEmailBody: (schoolName: string, schoolEmail: string, schoolPhone: string) => string;
    applicationQueriedEmailBody: (reason: string) => string;
    inspectionQueriedEmailBody: (reason: string[]) => string;
    inspectionApprovedEmailBody: () => string;
};
