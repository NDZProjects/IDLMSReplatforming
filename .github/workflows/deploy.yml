name: Deploy  Lambda

on:
  workflow_dispatch:
    inputs:
      ENV:
        description: 'Environment to deploy (dev/staging/prod)'
        required: true
        default: 'dev'

jobs:
  deploy-license-api:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.ENV }}

    env:
      AWS_REGION: us-east-1
      ENV: ${{ github.event.inputs.ENV }}

    steps:
      - name: Checkout `feature/btl-52` codebase
        uses: actions/checkout@v3
        with:
          ref: feature/btl-52

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: ./src
        run: npm ci

      - name: Build NestJS app
        working-directory: ./src
        run: npm run build

      - name: Package Lambda as ZIP
        working-directory: ./src
        run: |
          npm prune --production
          zip -r ../infra/lambda-idlms/backend-api.zip dist node_modules package.json -x "**/*.map" "**/*.d.ts" "**/test/**"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform VPC Init & Apply
        working-directory: ./infra/vpc
        run: |
          terraform init
          terraform apply -auto-approve -var-file=${{ env.ENV }}.tfvars

      - name: Terraform SSM Init & Apply
        working-directory: ./infra/ssm
        run: |
          terraform init
          terraform apply -auto-approve -var-file=${{ env.ENV }}.tfvars

      - name: Terraform Lambda Init & Apply
        working-directory: ./infra/lambda-idlms
        run: |
          terraform init
          terraform apply -auto-approve -var-file=${{ env.ENV }}.tfvars

      - name: Terraform REST API Init & Apply
        working-directory: ./infra/api
        run: |
          terraform init
          terraform apply -auto-approve -var-file=${{ env.ENV }}.tfvars
