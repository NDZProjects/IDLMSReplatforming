name: Launch EC2 GitHub Runner

on:
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"

jobs:
  launch-runner:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch Resource IDs
        run: |
          echo "Fetching subnet, SG..."
          SUBNET_ID=$(aws ec2 describe-subnets \
            --filters "Name=tag:Name,Values=public-subnet" \
            --query "Subnets[0].SubnetId" --output text)
          echo "SUBNET_ID=$SUBNET_ID" >> $GITHUB_ENV

          SECURITY_GROUP_ID=$(aws ec2 describe-security-groups \
            --filters "Name=group-name,Values=allow_ssh_and_app" \
            --query "SecurityGroups[0].GroupId" --output text)
          echo "SECURITY_GROUP_ID=$SECURITY_GROUP_ID" >> $GITHUB_ENV

      - name: Launch EC2 as GitHub Runner
        run: |
          echo "Launching EC2 instance as GitHub runner..."

          USER_DATA=$(cat <<EOF
#!/bin/bash
apt-get update -y
apt-get install -y docker.io git jq
systemctl start docker
usermod -aG docker ubuntu

cd /home/ubuntu
GH_OWNER="${{ secrets.GH_OWNER }}"
GH_REPO="${{ secrets.GH_REPO }}"
GH_PAT="${{ secrets.GH_RUNNER_TOKEN }}"

ARCH_TYPE="x64"
RUNNER_VERSION="2.316.1"
curl -LO https://github.com/actions/runner/releases/download/v\$RUNNER_VERSION/actions-runner-linux-\$ARCH_TYPE-\$RUNNER_VERSION.tar.gz
mkdir actions-runner && tar xzf actions-runner-linux-\$ARCH_TYPE-\$RUNNER_VERSION.tar.gz -C actions-runner
cd actions-runner

TOKEN=\$(curl -s -X POST -H "Authorization: token \$GH_PAT" \
  https://api.github.com/repos/\$GH_OWNER/\$GH_REPO/actions/runners/registration-token | jq -r .token)

./config.sh --url https://github.com/\$GH_OWNER/\$GH_REPO \
  --token \$TOKEN --unattended --name ec2-runner --labels ec2,github

./run.sh
EOF
          )

          # Get latest Ubuntu 22.04 AMI
          AMI_ID=$(aws ec2 describe-images \
            --owners 099720109477 \
            --filters "Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*" \
                      "Name=architecture,Values=x86_64" \
                      "Name=virtualization-type,Values=hvm" \
            --query "Images | sort_by(@, &CreationDate) | [-1].ImageId" \
            --output text)

          echo "Using AMI: $AMI_ID"

          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id $AMI_ID \
            --count 1 \
            --instance-type t2.medium \
            --key-name githubaction \
            --subnet-id $SUBNET_ID \
            --security-group-ids $SECURITY_GROUP_ID \
            --associate-public-ip-address \
            --iam-instance-profile Name=ec2_ssm_profile \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHubRunnerEC2}]' \
            --user-data "$USER_DATA" \
            --query "Instances[0].InstanceId" --output text)

          echo "âœ… GitHub Runner EC2 instance launched: $INSTANCE_ID"

